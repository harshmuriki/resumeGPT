[{"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/index.js":"1","/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/App.js":"2","/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/reportWebVitals.js":"3","/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx":"4","/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/firebase.js":"5","/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/JobDescription.jsx":"6"},{"size":535,"mtime":1694119239946,"results":"7","hashOfConfig":"8"},{"size":461,"mtime":1695773232721,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1694119239947,"results":"10","hashOfConfig":"8"},{"size":1484,"mtime":1695701234463,"results":"11","hashOfConfig":"8"},{"size":1010,"mtime":1695053804973,"results":"12","hashOfConfig":"8"},{"size":544,"mtime":1695773554890,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1i7k9td",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/index.js",[],[],[],"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/App.js",["35"],[],"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/reportWebVitals.js",[],[],"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx",["36","37","38"],[],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ref, uploadBytes, getDownloadURL, listAll, list } from \"firebase/storage\";\nimport { storage } from \"../firebase\";\nimport { v4 } from 'uuid';\n\nexport default function ResumeUpload() {\n\n    const [fileUpload, setFileUpload] = useState(null);\n    const [fileUrls, setFileUrls] = useState([])\n\n    const filesListRef = ref(storage, \"files/\")\n    const handleUpload = () => {\n      console.log(fileUpload)\n      if (fileUpload == null) \n        return;\n      const fileRef = ref(storage, `files/${fileUpload.name + v4()}`)\n\n      uploadBytes(fileRef, fileUpload).then((snapshot) => {\n        getDownloadURL(snapshot.ref).then((url) =>{\n          setFileUrls((prev) => [...prev, url])\n        })\n      })\n    }\n\n    useEffect(() => {\n      listAll(filesListRef).then((response) => {\n        response.items.forEach((item) => {\n          getDownloadURL(item).then((url) => {\n            setFileUrls((prev) => [...prev, url]);\n          });\n        });\n      });\n    }, []);\n  \n    return (\n      <div>\n          <input\n            type=\"file\"\n            accept=\".csv, .xlsx, .pdf\"\n            onChange={(event) => {\n              setFileUpload(event.target.files[0])\n            }}\n          />\n          <button type=\"submit\" onClick={handleUpload}>\n            Upload\n          </button>\n          {fileUrls.map((url) => {\n            return <img src={url} />\n          })}\n      </div>\n    );\n}\n\n \n\n  \n\n\n\n\n\n","/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/firebase.js",["39"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// import {getFirestore} from \"@firebase/firestore\"\nimport { getStorage } from \"firebase/storage\"\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB3hHzO74n2avJWVnfHen6CK0ZJYDxWSV8\",\n  authDomain: \"fir-resumegpt.firebaseapp.com\",\n  projectId: \"fir-resumegpt\",\n  storageBucket: \"fir-resumegpt.appspot.com\",\n  messagingSenderId: \"609779248808\",\n  appId: \"1:609779248808:web:9e2c10f6d940df44701c9d\",\n  measurementId: \"G-W7KXGHZ7JK\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const storage = getStorage(app)\n// export const firestore = getFirestore(app)\nconst analytics = getAnalytics(app);","/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/JobDescription.jsx",["40","41"],[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":3,"column":53,"nodeType":"44","messageId":"45","endLine":3,"endColumn":57},{"ruleId":"47","severity":1,"message":"48","line":34,"column":8,"nodeType":"49","endLine":34,"endColumn":10,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":49,"column":20,"nodeType":"53","endLine":49,"endColumn":37},{"ruleId":"42","severity":1,"message":"54","line":25,"column":7,"nodeType":"44","messageId":"45","endLine":25,"endColumn":16},{"ruleId":"42","severity":1,"message":"55","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":18},{"ruleId":"42","severity":1,"message":"56","line":2,"column":20,"nodeType":"44","messageId":"45","endLine":2,"endColumn":29},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'list' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filesListRef'. Either include it or remove the dependency array.","ArrayExpression",["57"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'analytics' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",{"desc":"58","fix":"59"},"Update the dependencies array to be: [filesListRef]",{"range":"60","text":"61"},[1042,1044],"[filesListRef]"]