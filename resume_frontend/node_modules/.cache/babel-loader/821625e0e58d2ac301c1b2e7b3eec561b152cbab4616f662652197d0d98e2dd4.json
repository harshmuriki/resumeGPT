{"ast":null,"code":"var _jsxFileName = \"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResumeUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleUpload = () => {\n    alert(\"File uploaded successfully\");\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const fileData = e.target.result;\n        localStorage.setItem('uploadedFile', fileData);\n        alert('File saved to local storage!');\n      };\n      reader.readAsDataURL(selectedFile);\n    } else {\n      alert('Please select a file before saving.');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv, .xlsx, .pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !selectedFile,\n        onClick: handleUpload,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n_s(ResumeUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResumeUpload","_s","selectedFile","setSelectedFile","handleFileChange","event","file","target","files","handleUpload","alert","reader","FileReader","onload","e","fileData","result","localStorage","setItem","readAsDataURL","handleSubmit","preventDefault","formData","FormData","append","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nexport default function ResumeUpload() {\n\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const handleFileChange = (event) => {\n      const file = event.target.files[0];\n      setSelectedFile(file);\n    };\n\n    const handleUpload = () => {\n        alert(\"File uploaded successfully\")\n        if (selectedFile) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            const fileData = e.target.result;\n            localStorage.setItem('uploadedFile', fileData);\n            alert('File saved to local storage!');\n          };\n          reader.readAsDataURL(selectedFile);\n        } else {\n            alert('Please select a file before saving.');\n        }\n    }\n\n  \n    const handleSubmit = async (event) => {\n      event.preventDefault();\n  \n      if (selectedFile) {\n        const formData = new FormData();\n        formData.append('file', selectedFile);\n      }\n    };\n  \n    return (\n      <div>\n        <h2>File Upload</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"file\"\n            accept=\".csv, .xlsx, .pdf\"\n            onChange={handleFileChange}\n          />\n          <button type=\"submit\" disabled={!selectedFile} onClick={handleUpload}>\n            Upload File\n          </button>\n        </form>\n      </div>\n    );\n}\n\n \n\n  \n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCL,eAAe,CAACG,IAAI,CAAC;EACvB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,4BAA4B,CAAC;IACnC,IAAIR,YAAY,EAAE;MAChB,MAAMS,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,MAAMC,QAAQ,GAAGD,CAAC,CAACP,MAAM,CAACS,MAAM;QAChCC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,QAAQ,CAAC;QAC9CL,KAAK,CAAC,8BAA8B,CAAC;MACvC,CAAC;MACDC,MAAM,CAACQ,aAAa,CAACjB,YAAY,CAAC;IACpC,CAAC,MAAM;MACHQ,KAAK,CAAC,qCAAqC,CAAC;IAChD;EACJ,CAAC;EAGD,MAAMU,YAAY,GAAG,MAAOf,KAAK,IAAK;IACpCA,KAAK,CAACgB,cAAc,CAAC,CAAC;IAEtB,IAAInB,YAAY,EAAE;MAChB,MAAMoB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtB,YAAY,CAAC;IACvC;EACF,CAAC;EAED,oBACEH,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB9B,OAAA;MAAM+B,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBAC3B1B,OAAA;QACEgC,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,mBAAmB;QAC1BC,QAAQ,EAAE7B;MAAiB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAACG,QAAQ,EAAE,CAAChC,YAAa;QAACiC,OAAO,EAAE1B,YAAa;QAAAgB,QAAA,EAAC;MAEtE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ;AAAC5B,EAAA,CAjDuBD,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}