{"ast":null,"code":"var _jsxFileName = \"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResumeUpload() {\n  _s();\n  const [fileUpload, setFileUpload] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setFileUpload(file);\n  };\n  const handleUpload = () => {\n    if (fileUpload == null) return;\n    const fileRef = ref(storage, `files/${fileUpload.name + v4()}`);\n    uploadBytes(fileRef, fileUpload).then(() => {\n      alert(\"File uploaded\");\n    });\n    //   e.preventDefault();\n    //   alert(\"File uploaded successfully\")\n\n    //   let data = {\n    //     file: fileRef.current.value,\n    //   }\n\n    //   try {\n    //     addDoc(ref, data)\n    //   } catch (e) {\n    //       console.log(e);\n    //   }\n    // }\n  };\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   if (selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('file', selectedFile);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv, .xlsx, .pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleUpload,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_s(ResumeUpload, \"E1U+UetMp6Jcu5Ac1dU2m34nLqM=\");\n_c = ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","ref","uploadBytes","v4","jsxDEV","_jsxDEV","ResumeUpload","_s","fileUpload","setFileUpload","handleFileChange","event","file","target","files","handleUpload","fileRef","storage","name","then","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport {ref, uploadBytes} from \"firebase/storage\"\nimport {v4} from 'uuid'\n\nexport default function ResumeUpload() {\n\n    const [fileUpload, setFileUpload] = useState(null);\n\n    const handleFileChange = (event) => {\n      const file = event.target.files[0];\n      setFileUpload(file);\n    };\n\n    const handleUpload = () => {\n      if (fileUpload == null) return;\n      const fileRef = ref(storage, `files/${fileUpload.name + v4()}`)\n\n      uploadBytes(fileRef, fileUpload).then(() => {\n        alert(\"File uploaded\")\n      })\n    //   e.preventDefault();\n    //   alert(\"File uploaded successfully\")\n\n    //   let data = {\n    //     file: fileRef.current.value,\n    //   }\n\n    //   try {\n    //     addDoc(ref, data)\n    //   } catch (e) {\n    //       console.log(e);\n    //   }\n    // }\n    }\n\n  \n    // const handleSubmit = async (event) => {\n    //   event.preventDefault();\n  \n    //   if (selectedFile) {\n    //     const formData = new FormData();\n    //     formData.append('file', selectedFile);\n    //   }\n    // };\n  \n    return (\n      <div>\n        <h2>File Upload</h2>\n        <form>\n          <input\n            type=\"file\"\n            accept=\".csv, .xlsx, .pdf\"\n            onChange={handleFileChange}\n          />\n          <button type=\"submit\" onClick={handleUpload}>\n            Upload File\n          </button>\n        </form>\n      </div>\n    );\n}\n\n \n\n  \n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAAQC,GAAG,EAAEC,WAAW,QAAO,kBAAkB;AACjD,SAAQC,EAAE,QAAO,MAAM;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCL,aAAa,CAACG,IAAI,CAAC;EACrB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIP,UAAU,IAAI,IAAI,EAAE;IACxB,MAAMQ,OAAO,GAAGf,GAAG,CAACgB,OAAO,EAAG,SAAQT,UAAU,CAACU,IAAI,GAAGf,EAAE,CAAC,CAAE,EAAC,CAAC;IAE/DD,WAAW,CAACc,OAAO,EAAER,UAAU,CAAC,CAACW,IAAI,CAAC,MAAM;MAC1CC,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC;IACJ;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;EACA,CAAC;;EAGD;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,mBAAmB;QAC1BC,QAAQ,EAAElB;MAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACG,OAAO,EAAEd,YAAa;QAAAM,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ;AAAClB,EAAA,CAxDuBD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}