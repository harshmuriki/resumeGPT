{"ast":null,"code":"var _jsxFileName = \"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { ref, uploadBytes } from \"..firebase/storage\";\nimport { storage } from \"../firebase\";\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResumeUpload() {\n  _s();\n  const [fileUpload, setFileUpload] = useState(null);\n\n  // const handleFileChange = (event) => {\n  //   const file = event.target.files[0];\n  //   setFileUpload(file);\n  //   console.log(fileUpload)\n  // };\n\n  const handleUpload = () => {\n    console.log(fileUpload);\n    if (fileUpload == null) return;\n    const fileRef = ref(storage, `files/${fileUpload.name + v4()}`);\n    uploadBytes(fileRef, fileUpload).then(() => {\n      alert(\"File uploaded\");\n    });\n    //   e.preventDefault();\n    //   alert(\"File uploaded successfully\")\n\n    //   let data = {\n    //     file: fileRef.current.value,\n    //   }\n\n    //   try {\n    //     addDoc(ref, data)\n    //   } catch (e) {\n    //       console.log(e);\n    //   }\n    // }\n  };\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   if (selectedFile) {\n  //     const formData = new FormData();\n  //     formData.append('file', selectedFile);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv, .xlsx, .pdf\",\n        onChange: e => {\n          setFileUpload(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n_s(ResumeUpload, \"E1U+UetMp6Jcu5Ac1dU2m34nLqM=\");\n_c = ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","ref","uploadBytes","storage","v4","jsxDEV","_jsxDEV","ResumeUpload","_s","fileUpload","setFileUpload","handleUpload","console","log","fileRef","name","then","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { ref, uploadBytes } from \"..firebase/storage\";\nimport { storage } from \"../firebase\";\nimport { v4 } from 'uuid';\n\nexport default function ResumeUpload() {\n\n    const [fileUpload, setFileUpload] = useState(null);\n\n    // const handleFileChange = (event) => {\n    //   const file = event.target.files[0];\n    //   setFileUpload(file);\n    //   console.log(fileUpload)\n    // };\n\n    const handleUpload = () => {\n      console.log(fileUpload)\n      if (fileUpload == null) \n        return;\n      const fileRef = ref(storage, `files/${fileUpload.name + v4()}`)\n\n      uploadBytes(fileRef, fileUpload).then(() => {\n        alert(\"File uploaded\")\n      })\n    //   e.preventDefault();\n    //   alert(\"File uploaded successfully\")\n\n    //   let data = {\n    //     file: fileRef.current.value,\n    //   }\n\n    //   try {\n    //     addDoc(ref, data)\n    //   } catch (e) {\n    //       console.log(e);\n    //   }\n    // }\n    }\n\n  \n    // const handleSubmit = async (event) => {\n    //   event.preventDefault();\n  \n    //   if (selectedFile) {\n    //     const formData = new FormData();\n    //     formData.append('file', selectedFile);\n    //   }\n    // };\n  \n    return (\n      <div>\n        <h2>File Upload</h2>\n        <form>\n          <input\n            type=\"file\"\n            accept=\".csv, .xlsx, .pdf\"\n            onChange={(e) => {\n              setFileUpload(e.target.files[0])\n            }}\n          />\n          <button type=\"submit\" onClick={handleUpload}>\n            Upload\n          </button>\n        </form>\n      </div>\n    );\n}\n\n \n\n  \n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,EAAEC,WAAW,QAAQ,oBAAoB;AACrD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,EAAE,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA;EACA;EACA;EACA;;EAEA,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;IACvB,IAAIA,UAAU,IAAI,IAAI,EACpB;IACF,MAAMK,OAAO,GAAGb,GAAG,CAACE,OAAO,EAAG,SAAQM,UAAU,CAACM,IAAI,GAAGX,EAAE,CAAC,CAAE,EAAC,CAAC;IAE/DF,WAAW,CAACY,OAAO,EAAEL,UAAU,CAAC,CAACO,IAAI,CAAC,MAAM;MAC1CC,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC;IACJ;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;EACA,CAAC;;EAGD;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBhB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,mBAAmB;QAC1BC,QAAQ,EAAGC,CAAC,IAAK;UACfhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFhB,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAElB,YAAa;QAAAO,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ;AAACd,EAAA,CA7DuBD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}