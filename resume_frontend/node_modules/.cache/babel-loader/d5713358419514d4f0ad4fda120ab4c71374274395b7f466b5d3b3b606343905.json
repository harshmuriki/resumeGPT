{"ast":null,"code":"var _jsxFileName = \"/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { ref, uploadBytes, getDownloadURL, listAll, list } from \"firebase/storage\";\nimport { storage } from \"../firebase\";\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResumeUpload() {\n  _s();\n  const [fileUpload, setFileUpload] = useState(null);\n  const [fileUrls, setFileUrls] = useState([]);\n\n  // const handleFileChange = (event) => {\n  //   const file = event.target.files[0];\n  //   setFileUpload(file);\n  //   console.log(fileUpload)\n  // };\n\n  const filesListRef = reg(storage, \"files/\");\n  const handleUpload = () => {\n    console.log(fileUpload);\n    if (fileUpload == null) return;\n    const fileRef = ref(storage, `files/${fileUpload.name + v4()}`);\n    uploadBytes(fileRef, fileUpload).then(snapshot => {\n      getDownloadURL(snapshot.ref).then(url => {\n        setFileUrls(prev => [...prev, url]);\n      });\n      alert(\"File uploaded\");\n    });\n  };\n  useEffect(() => {\n    listAll(filesListRef).then(response => {\n      response.items.forEach(item => {\n        getDownloadURL(item).then(url => {\n          setFileUrls(prev => [...prev, url]);\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv, .xlsx, .pdf\",\n        onChange: event => {\n          setFileUpload(event.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), fileUrls.map(url => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s(ResumeUpload, \"BrvD1vQjt8fwfqa1NoZLNA/QE2c=\");\n_c = ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","ref","uploadBytes","getDownloadURL","listAll","list","storage","v4","jsxDEV","_jsxDEV","ResumeUpload","_s","fileUpload","setFileUpload","fileUrls","setFileUrls","filesListRef","reg","handleUpload","console","log","fileRef","name","then","snapshot","url","prev","alert","useEffect","response","items","forEach","item","children","type","accept","onChange","event","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","src","_c","$RefreshReg$"],"sources":["/Users/yash/Documents/Yash/resumeGPT Project/resumeGPT/resume_frontend/src/components/ResumeUpload.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { ref, uploadBytes, getDownloadURL, listAll, list } from \"firebase/storage\";\nimport { storage } from \"../firebase\";\nimport { v4 } from 'uuid';\n\nexport default function ResumeUpload() {\n\n    const [fileUpload, setFileUpload] = useState(null);\n    const [fileUrls, setFileUrls] = useState([])\n\n    // const handleFileChange = (event) => {\n    //   const file = event.target.files[0];\n    //   setFileUpload(file);\n    //   console.log(fileUpload)\n    // };\n\n    const filesListRef = reg(storage, \"files/\")\n    const handleUpload = () => {\n      console.log(fileUpload)\n      if (fileUpload == null) \n        return;\n      const fileRef = ref(storage, `files/${fileUpload.name + v4()}`)\n\n      uploadBytes(fileRef, fileUpload).then((snapshot) => {\n        getDownloadURL(snapshot.ref).then((url) =>{\n          setFileUrls((prev) => [...prev, url])\n        })\n        alert(\"File uploaded\")\n      })\n    }\n\n    useEffect(() => {\n      listAll(filesListRef).then((response) => {\n        response.items.forEach((item) => {\n          getDownloadURL(item).then((url) => {\n            setFileUrls((prev) => [...prev, url]);\n          });\n        });\n      });\n    }, []);\n  \n    return (\n      <div>\n        <form>\n          <input\n            type=\"file\"\n            accept=\".csv, .xlsx, .pdf\"\n            onChange={(event) => {\n              setFileUpload(event.target.files[0])\n            }}\n          />\n          <button type=\"submit\" onClick={handleUpload}>\n            Upload\n          </button>\n          {fileUrls.map((url) => {\n            return <img src={url} />\n          })}\n        </form>\n      </div>\n    );\n}\n\n \n\n  \n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}